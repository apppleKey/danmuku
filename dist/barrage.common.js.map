{"version":3,"file":"barrage.common.js","sources":["../src/utils.js","../src/barrage.js","../src/runtime.js","../src/manager.js","../src/index.js"],"sourcesContent":["export function warning (condition, message) {\r\n  if (condition) return\r\n  throw new Error(`Warning: ${message}`)\r\n}\r\n\r\nexport function assertArray (data) {\r\n  if (!Array.isArray(data)) {\r\n    throw TypeError('The barrage data must be an array.')\r\n  }\r\n}\r\n\r\nexport function callHook (hooks, name, args = []) {\r\n  if (typeof hooks[name] === 'function') {\r\n    hooks[name].apply(null, args)\r\n  }\r\n}\r\n\r\nexport function createKey() {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(2, 8)\r\n}\r\n\r\nconst raf = window.requestAnimationFrame\r\n      ? window.requestAnimationFrame.bind(window)\r\n      : setTimeout\r\n\r\nexport function nextFrame (fn) {\r\n  raf(() => {\r\n    raf(fn)\r\n  })\r\n}\r\n\r\nexport let transitionProp = 'transition'\r\nexport let transitionEndEvent = 'transitionend'\r\nif (\r\n    window.ontransitionend === undefined &&\r\n    window.onwebkittransitionend !== undefined\r\n) {\r\n  transitionProp = 'WebkitTransition'\r\n  transitionEndEvent = 'webkitTransitionEnd'\r\n}\r\n\r\nexport function whenTransitionEnds (node) {\r\n  return new Promise(resolve => {\r\n    let isCalled = false\r\n    const end = () => {\r\n      node.removeEventListener(transitionEndEvent, onEnd)\r\n      resolve()\r\n    }\r\n    const onEnd = e => {\r\n      if (!isCalled) {\r\n        isCalled = true\r\n        end()\r\n      }\r\n    }\r\n    node.addEventListener(transitionEndEvent, onEnd)\r\n  })\r\n}","import { warning, callHook, createKey  } from './utils'\r\n\r\nexport default class Barrage {\r\n  constructor (itemData, time, container, RuntimeManager, direction, hooks) {\r\n    this._width = null\r\n    this.hooks = hooks\r\n    this.paused = false\r\n    this.moveing = false\r\n    this.data = itemData\r\n    this.direction = direction\r\n    this.container = container\r\n    this.duration = Number(time)\r\n    this.RuntimeManager = RuntimeManager\r\n    this.key = itemData.id || createKey()\r\n    this.position = {\r\n      y: null,\r\n      trajectory: null,\r\n    }\r\n    this.timeInfo = {\r\n      pauseTime: 0, // 总共暂停了多少时间\r\n      startTime: null, // 开始移动时间\r\n      prevPauseTime: null, // 上次暂停的时间\r\n    }\r\n\r\n    this.create()\r\n  }\r\n\r\n  // 得到当前移动了多少距离\r\n  getMoveDistance () {\r\n    if (!this.moveing) return 0\r\n    const { pauseTime, startTime, prevPauseTime } = this.timeInfo\r\n\r\n    const containerWidth = this.RuntimeManager.containerWidth\r\n    const currentTime = this.paused ? prevPauseTime : Date.now()\r\n    const percent = (currentTime - startTime - pauseTime) / 1000 / this.duration\r\n\r\n    return percent * containerWidth\r\n  }\r\n\r\n  width () {\r\n    return new Promise(resolve => {\r\n      let i = 0\r\n      if (this._width) {\r\n        return resolve(this._width)\r\n      }\r\n\r\n      const fn = () => {\r\n        warning(++i < 99, 'Unable to get the barr width.')\r\n        setTimeout(() => {\r\n          let width = getComputedStyle(this.node).width\r\n          if (width == null || width === '') {\r\n            fn()\r\n          } else {\r\n            width = parseInt(width)\r\n            this._width = width\r\n            resolve(width)\r\n          }\r\n        })\r\n      }\r\n      fn()\r\n    })\r\n  }\r\n\r\n  create () {\r\n    const node = document.createElement('div')\r\n    node.id = this.key\r\n    this.node = node\r\n    callHook(this.hooks, 'create', [node, this])\r\n  }\r\n\r\n  append () {\r\n    warning(this.container, 'Need container element.')\r\n    if (this.node) {\r\n      this.container.appendChild(this.node)\r\n      callHook(this.hooks, 'append', [this.node, this])\r\n    }\r\n  }\r\n\r\n  remove () {\r\n    warning(this.container, 'Need container element.')\r\n    if (this.node) {\r\n      this.container.removeChild(this.node)\r\n      callHook(this.hooks, 'remove', [this.node, this])\r\n    }\r\n  }\r\n\r\n  // 暂停当前动画\r\n  pause () {\r\n    if (this.moveing && !this.paused) {\r\n      this.paused = true\r\n      this.timeInfo.prevPauseTime = Date.now()\r\n\r\n      this.width().then(w => {\r\n        const moveDistance = this.getMoveDistance()\r\n        if (!Number.isNaN(moveDistance)) {\r\n          // this.node.style.tranf\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // 暂定当前\r\n  resume () {\r\n    if (this.moveing && this.paused) {\r\n      this.paused = false\r\n      this.timeInfo.prevPauseTime = null\r\n      // 增加暂停时间段\r\n    }\r\n  }\r\n\r\n  // 恢复初始状态，以便复用\r\n  reset () {\r\n    this.position = {\r\n      y: null,\r\n      trajectory: null,\r\n    }\r\n    this.timeInfo = {\r\n      pauseTime: 0,\r\n      startTime: null,\r\n      prevPauseTime: null,\r\n    }\r\n  }\r\n}","import { nextFrame, transitionProp, whenTransitionEnds } from './utils'\r\n\r\nexport default class RuntimeManager {\r\n  constructor ({container, rowGap = 0, height = 60}) {\r\n    const styles = getComputedStyle(container)\r\n\r\n    if (!styles.position || styles.position === 'static') {\r\n      container.style.position = 'relative'\r\n    }\r\n\r\n    this.rowGap = rowGap\r\n    this.singleHeight = height\r\n    this.containerWidth = parseInt(styles.width)\r\n    this.containerHeight = parseInt(styles.height)\r\n    this.init()\r\n  }\r\n\r\n  // 初始化\r\n  init () {\r\n    this.container = []\r\n    this.rows = parseInt(this.containerHeight / this.singleHeight)\r\n\r\n    // 初始化弹道\r\n    for (let i = 0; i < this.rows; i++) {\r\n      const start = this.singleHeight * i\r\n      const end = this.singleHeight * (i + 1) - 1\r\n\r\n      this.container.push({\r\n        values: [],\r\n        gaps: [start, end],\r\n      })\r\n    }\r\n  }\r\n\r\n  getTrajectory (alreadyFound = []) {\r\n    // 如果发现全部都找过了，则代表没有合适的弹道可以选择\r\n    if (alreadyFound.length === this.container.length) {\r\n      return null\r\n    }\r\n\r\n    const getIndex = () => {\r\n      const randomIndex = Math.floor(Math.random() * this.rows)\r\n      return alreadyFound.includes(randomIndex)\r\n        ? getIndex()\r\n        : randomIndex\r\n    }\r\n\r\n    const index = getIndex()\r\n    const currentTragectory = this.container[index]\r\n    const lastBarrage = currentTragectory.values[currentTragectory.values.length - 1]\r\n    \r\n    if (!lastBarrage) {\r\n      return currentTragectory\r\n    }\r\n\r\n    alreadyFound.push(index)\r\n\r\n    // 最后一个弹幕移动超过了我们限制的距离，就允许加入新的弹幕\r\n    if (lastBarrage.moveing) {\r\n      const distance = lastBarrage.getMoveDistance()\r\n\r\n      return distance > this.rowGap\r\n        ? currentTragectory\r\n        : this.getTrajectory(alreadyFound)\r\n    }\r\n\r\n    return this.getTrajectory(alreadyFound)\r\n  }\r\n\r\n  // 移动弹幕\r\n  move (barrage, isShow) {\r\n    // 设置当前弹幕在哪一个弹道\r\n    const node = barrage.node\r\n    node.style.top = `${barrage.position.y}px`\r\n\r\n    return new Promise(resolve => {\r\n      nextFrame(() => {\r\n        const moveDirect = barrage.direction === 'left' ? 1 : -1\r\n        node.style.display = isShow ? 'inline-block' : 'none'\r\n        node.style[transitionProp] = `transform linear ${barrage.duration}s`\r\n        node.style.transform = `translateX(${moveDirect * this.containerWidth}px)`\r\n\r\n        barrage.moveing = true\r\n        barrage.timeInfo.startTime = Date.now()\r\n        resolve(whenTransitionEnds(node))\r\n      })\r\n    })\r\n  }\r\n}","import Barrage from './barrage'\r\nimport { assertArray } from './utils'\r\nimport RuntimeManager from './runtime'\r\n\r\nexport default class BarrageManager {\r\n  constructor (data, opts) {\r\n    this.data = data\r\n    this.opts = opts\r\n    this.isShow = true\r\n    this.loopTimer = null\r\n    this.showBarrages = [] // 渲染在页面上的弹幕数量\r\n    this.stashBarrages = this.data.slice() // 暂存的弹幕数量\r\n    this.RuntimeManager = new RuntimeManager(opts)\r\n  }\r\n\r\n  get length () {\r\n    return  this.showBarrages.length + this.stashBarrages.length\r\n  }\r\n\r\n  // 初始化弹幕\r\n  start () {\r\n    if (this.stashBarrages.length > 0) {\r\n      let length = this.opts.limit - this.showBarrages.length\r\n\r\n      if (length > this.stashBarrages.length) {\r\n        length = this.stashBarrages.length\r\n      }\r\n\r\n      if (length > 0) {\r\n        for (let i = 0; i < length; i++) {\r\n          const data = this.stashBarrages.shift()\r\n          if (data) {\r\n            this.initSingleBarrage(data)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 增添弹幕数量\r\n  push (data) {\r\n    assertArray(data)\r\n\r\n    if (data.length + this.length > this.opts.capcity) {\r\n      console.warn(`The number of barrage is greater than \"${this.opts.capcity}\".`)\r\n      return false\r\n    }\r\n    this.stashBarrages.push.apply(this.stashBarrages, data)\r\n    return true\r\n  }\r\n\r\n  // 显示所有弹幕\r\n  show () {\r\n    if (this.isShow) return\r\n    this.isShow = true\r\n    this.each(barrage => {\r\n      barrage.node.style.display = 'inline-block'\r\n    })\r\n  }\r\n\r\n  // 隐藏所有弹幕\r\n  hiden () {\r\n    if (!this.isShow) return\r\n    this.isShow = false\r\n    this.each(barrage => {\r\n      barrage.node.style.display = 'none'\r\n    })\r\n  }\r\n\r\n  // 遍历在渲染中的节点\r\n  each (cb) {\r\n    if (typeof cb === 'function') {\r\n      this.showBarrages.forEach(cb)\r\n    }\r\n  }\r\n\r\n  // 循环检测添加弹幕\r\n  loop (interval = 1000) {\r\n    const stop = () => {\r\n      if (this.loopTimer) {\r\n        clearTimeout(this.loopTimer)\r\n        this.loopTimer = null\r\n      }\r\n    }\r\n\r\n    const core = () => {\r\n      this.loopTimer = setTimeout(() => {\r\n        this.start()\r\n        core()\r\n      }, interval)\r\n    }\r\n    \r\n    stop()\r\n    core()\r\n    return stop\r\n  }\r\n\r\n  // 初始化一个弹幕\r\n  async initSingleBarrage (data) {\r\n    const barrage = data instanceof Barrage ? data : this.createSingleBarrage(data)\r\n    const newBarrage = this.sureBarrageInfo(barrage)\r\n\r\n    if (newBarrage) {\r\n      // 当前这个弹幕需要渲染到屏幕上\r\n      const trajectory = newBarrage.position.trajectory\r\n\r\n      newBarrage.append()\r\n      this.showBarrages.push(newBarrage)\r\n      trajectory.values.push(newBarrage)\r\n\r\n      await this.RuntimeManager.move(newBarrage, this.isShow)\r\n\r\n      // 弹幕运动结束后删掉\r\n      newBarrage.remove()\r\n      newBarrage.moveing = false\r\n\r\n      // 删除存起来的\r\n      let index = -1\r\n      if (trajectory.values.length > 0) {\r\n        index = trajectory.values.indexOf(newBarrage)\r\n        if (~index) trajectory.values.splice(index, 1)\r\n      }\r\n\r\n      if (this.showBarrages.length > 0) {\r\n        index = this.showBarrages.indexOf(newBarrage)\r\n        if (~index) this.showBarrages.splice(index, 1)\r\n      }\r\n    } else {\r\n      // 否则就先存起来，按道理说只会存一个\r\n      // 按照现有的逻辑，最后一个会不停的取出来，然后存起来\r\n      this.stashBarrages.unshift(barrage)\r\n    }\r\n  }\r\n\r\n  createSingleBarrage (data) {\r\n    const [max, min] = this.opts.times\r\n    const container = this.opts.container\r\n    const time = (Math.random() * (max - min) + min).toFixed(0)\r\n\r\n    return new Barrage(\r\n      data,\r\n      time,\r\n      container,\r\n      this.RuntimeManager,\r\n      this.opts.direction,\r\n      Object.assign({}, this.opts.hooks, {\r\n        create: this.setBarrageStyle.bind(this),\r\n      })\r\n    )\r\n  }\r\n\r\n  // 初始化弹幕的位置信息\r\n  sureBarrageInfo (barrage) {\r\n    const position = barrage.position\r\n    const runtime = this.RuntimeManager\r\n    const trajectory = runtime.getTrajectory()\r\n\r\n    // 没有弹道信息代表现在页面上不能出现\r\n    if (!trajectory) return null\r\n\r\n    position.y = trajectory.gaps[0]\r\n    position.trajectory = trajectory\r\n\r\n    return barrage\r\n  }\r\n\r\n  // 设置弹幕的样式\r\n  setBarrageStyle (node, barrage) {\r\n    const { hooks = {}, direction } = this.opts\r\n    const moveDis = direction === 'left' ? -1 : 1\r\n\r\n    if (typeof hooks.create === 'function') {\r\n      hooks.create(node, barrage)\r\n    } else {\r\n      node.textContent = barrage.content\r\n      node.style.height = this.RuntimeManager.height\r\n    }\r\n\r\n    node.style.position = 'absolute'\r\n    node.style[direction] = 0\r\n    node.style.transform = `translateX(${moveDis * 100}%)`\r\n    node.style.display = this.isShow ? 'inline-block' : 'none'\r\n\r\n  }\r\n}","import { assertArray } from './utils'\r\nimport BarrageManager from './manager'\r\n\r\nfunction createBarrage (data = [], opts = {}) {\r\n  assertArray(data)\r\n\r\n  opts = Object.assign({\r\n    hooks: {}, // 钩子函数\r\n    limit: 20, // 页面上允许渲染的数量\r\n    height: 50, // 弹道的高\r\n    rowGap: 100, // 同一条轨道上两条弹幕的间隔\r\n    capcity: 1024, // 内存中能存放的弹幕数量\r\n    times: [8, 15], // 弹幕移动时间取值范围\r\n    direction: 'right', // 弹幕左边出来还是右边\r\n  }, opts)\r\n\r\n  if (data.length > opts.capcity) {\r\n    throw ReferenceError(`The number of barrage is greater than \"${opts.capcity}\".`)\r\n  }\r\n\r\n  return new BarrageManager(data, opts)\r\n}\r\n\r\nexport default createBarrage"],"names":[],"mappings":"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"}