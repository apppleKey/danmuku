{"version":3,"file":"danmuku.common.js","sources":["../src/utils.js","../src/barrage.js","../src/runtime.js","../src/special.js","../src/manager.js","../src/index.js"],"sourcesContent":["export function warning (condition, message) {\n  if (condition) return\n  throw new Error(`Warning: ${message}`)\n}\n\nexport function callHook (hooks, name, args = []) {\n  if (hooks && typeof hooks[name] === 'function') {\n    hooks[name].apply(null, args)\n  }\n}\n\nexport function createKey () {\n  return Math.random()\n    .toString(36)\n    .substr(2, 8)\n}\n\nexport function toNumber (val) {\n  return typeof val === 'number'\n    ? val\n    : typeof val === 'string'\n      ? Number(val.replace('px', ''))\n      : NaN\n}\n\nexport function lastElement (arr, lastIndex) {\n  return arr[arr.length - lastIndex]\n}\n\nexport function isRange ([a, b], val) {\n  if (val === a || val === b) return true\n  const min = Math.min(a, b)\n  const max = min === a ? b : a\n  return min < val && val < max\n}\n\nexport function upperCase ([first, ...remaing]) {\n  return first.toUpperCase() + remaing.join('')\n}\n\nconst raf = window.requestAnimationFrame\n      ? window.requestAnimationFrame.bind(window)\n      : setTimeout\n\nexport function nextFrame (fn) {\n  raf(() => {\n    raf(fn)\n  })\n}\n\nexport let transitionProp = 'transition'\nexport let transitionEndEvent = 'transitionend'\nexport let transitionDuration = 'transitionDuration'\nif (\n    window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n) {\n  transitionProp = 'WebkitTransition'\n  transitionEndEvent = 'webkitTransitionEnd'\n  transitionDuration = 'webkitTransitionDuration'\n}\n\nexport function whenTransitionEnds (node) {\n  return new Promise(resolve => {\n    let isCalled = false\n    const end = () => {\n      node.removeEventListener(transitionEndEvent, onEnd)\n      resolve()\n    }\n    const onEnd = () => {\n      if (!isCalled) {\n        isCalled = true\n        end()\n      }\n    }\n    node.addEventListener(transitionEndEvent, onEnd)\n  })\n}","import {\n  warning,\n  callHook,\n  createKey,\n  transitionDuration,\n} from './utils'\n\nexport default class Barrage {\n  constructor (itemData, time, manager, hooks) {\n    const RuntimeManager = manager.RuntimeManager\n    const { direction, container } = manager.opts\n    \n    this.node = null\n    this.hooks = hooks\n    this.paused = false\n    this.moveing = false\n    this.data = itemData\n    this.duration = time\n    this.isSpecial = false\n    this.trajectory = null\n    this.manager = manager\n    this.direction = direction\n    this.container = container\n    this.RuntimeManager = RuntimeManager\n    this.key = itemData.key || createKey()\n    this.position = {\n      y: null,\n    }\n    this.timeInfo = {\n      pauseTime: 0, // 总共暂停了多少时间\n      startTime: null, // 开始移动的时间\n      prevPauseTime: null, // 上次暂停的时间\n      currentDuration: time, // 当前实时运动时间，因为每次暂停会重置 transition duration\n    }\n\n    this.create()\n  }\n\n  getMovePrecent () {\n    const { pauseTime, startTime, prevPauseTime } = this.timeInfo\n    const currentTime = this.paused ? prevPauseTime : Date.now()\n\n    return (currentTime - startTime - pauseTime) / 1000 / this.duration\n  }\n\n  // 得到当前移动了多少距离\n  getMoveDistance (fix = true) {\n    if (!this.moveing) return 0\n    const percent = this.getMovePrecent()\n    const containerWidth = this.RuntimeManager.containerWidth + (\n      fix\n        ? this.getWidth()\n        : 0\n    )\n\n    return percent * containerWidth\n  }\n\n  getHeight () {\n    return (this.node && this.node.clientHeight) || 0\n  }\n\n  getWidth () {\n    return (this.node && this.node.clientWidth) || 0\n  }\n\n  // 得到当前弹幕的运动速度\n  getSpeed () {\n    const duration = this.timeInfo.currentDuration\n    const containerWidth = this.RuntimeManager.containerWidth + this.getWidth()\n    \n    return duration == null || containerWidth == null\n      ? 0\n      : containerWidth / duration\n  }\n\n  create () {\n    this.node = document.createElement('div')\n    callHook(this.hooks, 'barrageCreate', [this.node, this])\n  }\n\n  append () {\n    warning(this.container, 'Need container element.')\n    if (this.node) {\n      this.container.appendChild(this.node)\n      callHook(this.hooks, 'barrageAppend', [this.node, this])\n    }\n  }\n  \n  remove (noCallHook) {\n    warning(this.container, 'Need container element.')\n    if (this.node) {\n      this.container.removeChild(this.node)\n\n      if (!noCallHook) {\n        callHook(this.hooks, 'barrageRemove', [this.node, this])\n      }\n    }\n  }\n\n  // API 销毁当前节点\n  deletedInMemory () {\n    let index = -1\n    const trajectory = this.trajectory\n    const showBarrages = this.manager.showBarrages\n  \n    // 删除内存中存起来的弹幕类\n    if (trajectory && trajectory.values.length > 0) {\n      index = trajectory.values.indexOf(this)\n      if (~index) trajectory.values.splice(index, 1)\n    }\n  \n    if (showBarrages && showBarrages.length > 0) {\n      index = showBarrages.indexOf(this)\n      if (~index) showBarrages.splice(index, 1)\n    }\n  }\n  \n  // API 销毁当前节点\n  destroy () {\n    this.remove()\n    this.moveing = false\n    this.deletedInMemory()\n  \n    callHook(this.hooks, 'barrageDestroy', [this.node, this])\n    this.node = null\n  }\n\n  // API 暂停当前动画\n  pause () {\n    if (this.moveing && !this.paused) {\n      let moveDistance = this.getMoveDistance()\n  \n      if (!Number.isNaN(moveDistance)) {\n        this.paused = true\n        this.timeInfo.prevPauseTime = Date.now()\n\n        if (this.direction === 'right') {\n          moveDistance *= -1\n        }\n\n        this.node.style[transitionDuration] = '0s'\n        this.node.style.transform = `translateX(${moveDistance}px)`\n      }\n    }\n  }\n\n  // API 恢复当前\n  resume () {\n    if (this.moveing && this.paused) {\n      this.paused = false\n\n      // 增加暂停时间段\n      this.timeInfo.pauseTime += Date.now() - this.timeInfo.prevPauseTime\n      this.timeInfo.prevPauseTime = null\n      \n      const des = this.direction === 'left' ? 1 : -1\n      const containerWidth = this.RuntimeManager.containerWidth + this.getWidth()\n      const remainingTime = (1 - this.getMoveDistance() / containerWidth) * this.duration\n\n      this.timeInfo.currentDuration = remainingTime\n      this.node.style[transitionDuration] = `${remainingTime}s`\n      this.node.style.transform = `translateX(${containerWidth * des}px)`\n    }\n  }\n\n  // 恢复初始状态，以便复用\n  reset () {\n    this.paused = false\n    this.moveing = false\n    this.trajectory = null\n\n    this.position = {\n      y: null,\n    }\n\n    this.timeInfo = {\n      pauseTime: 0,\n      startTime: null,\n      prevPauseTime: null,\n      currentDuration: this.duration,\n    }\n\n    // 从视图中删除，在内存中删除\n    this.remove(true)\n    this.deletedInMemory()\n  }\n}","import {\n  isRange,\n  callHook,\n  toNumber,\n  upperCase,\n  nextFrame,\n  lastElement,\n  transitionProp,\n  whenTransitionEnds,\n} from './utils'\n\nexport default class RuntimeManager {\n  constructor (opts) {\n    const {container, rowGap, height} = opts\n    const styles = getComputedStyle(container)\n\n    if (!styles.position || styles.position === 'static') {\n      container.style.position = 'relative'\n    }\n\n    this.opts = opts\n    this.rowGap = rowGap\n    this.singleHeight = height\n    this.containerElement = container\n    this.containerWidth = toNumber(styles.width)\n    this.containerHeight = toNumber(styles.height)\n    this.init()\n  }\n\n  // 初始化\n  init () {\n    this.container = []\n    this.rows = parseInt(this.containerHeight / this.singleHeight)\n\n    // 初始化弹道\n    for (let i = 0; i < this.rows; i++) {\n      const start = this.singleHeight * i\n      const end = this.singleHeight * (i + 1) - 1\n\n      this.container.push({\n        values: [],\n        gaps: [start, end],\n      })\n    }\n  }\n\n  resize () {\n    const styles = getComputedStyle(this.containerElement)\n\n    this.containerWidth = toNumber(styles.width)\n    this.containerHeight = toNumber(styles.height)\n    this.rows = parseInt(this.containerHeight / this.singleHeight)\n\n    const container = []\n\n    for (let i = 0; i < this.rows; i++) {\n      const start = this.singleHeight * i\n      const end = this.singleHeight * (i + 1) - 1\n      const gaps = [start, end]\n\n      // 把原先的移进来\n      if (this.container[i]) {\n        this.container[i].gaps = gaps\n        container.push(this.container[i])\n      } else {\n        // 新的轨道\n        container.push({ gaps, values: [] })\n      }\n    }\n\n    this.container = container\n  }\n\n  // 随机取一个轨道\n  getRandomIndex (exclude) {\n    const randomIndex = Math.floor(Math.random() * this.rows)\n    return exclude.includes(randomIndex)\n      ? this.getRandomIndex(exclude)\n      : randomIndex\n  }\n\n  getTrajectory (alreadyFound = []) {\n    // 如果发现全部都找过了，则代表没有合适的弹道可以选择\n    if (alreadyFound.length === this.container.length) {\n      return null\n    }\n\n    const index = this.getRandomIndex(alreadyFound)\n    const currentTrajectory = this.container[index]\n    const lastBarrage = lastElement(currentTrajectory.values, 1)\n\n    if (this.rowGap <= 0 || !lastBarrage) {\n      return currentTrajectory\n    }\n\n    alreadyFound.push(index)\n\n    // 最后一个弹幕移动超过了我们限制的距离，就允许加入新的弹幕\n    if (lastBarrage.moveing) {\n      const distance = lastBarrage.getMoveDistance()\n      const spacing = this.rowGap > 0\n        ? this.rowGap + lastBarrage.getWidth()\n        : this.rowGap\n\n      return distance > spacing\n        ? currentTrajectory\n        : this.getTrajectory(alreadyFound)\n    }\n\n    return this.getTrajectory(alreadyFound)\n  }\n\n  // 计算追尾的时间，由于 css 动画的误差导致追尾的时间计算会有一定的误差，5% 以内\n  computingDuration (prevBarrage, currentBarrage) {\n    const prevWidth = prevBarrage.getWidth()\n    const currentWidth = currentBarrage.getWidth()\n    const prevSpeed = prevBarrage.getSpeed()\n    const currentSpeed = currentBarrage.getSpeed()\n    const acceleration = currentSpeed - prevSpeed\n    \n    // 如果加速度小于等于 0，永远不可能追上\n    if (acceleration <= 0) {\n      return null\n    }\n    const distance = prevBarrage.getMoveDistance(false)\n    const meetTime = distance / acceleration\n  \n    // 如果相遇时间大于于当前弹幕的运动时间，则肯会在容器视图外面追尾，不用管\n    if (meetTime >= currentBarrage.duration) {\n      return null\n    }\n  \n    // 把此次弹幕运动时间修改为上一个弹幕移除屏幕的时间，这样追尾的情况在刚刚移除视图的时候进行\n    const containerWidth = this.containerWidth + currentWidth + prevWidth\n    const remainingTime = (1 - prevBarrage.getMovePrecent()) * prevBarrage.duration\n\n    // c1 / t1 = c2 / t2 => t2 = c2 * t1 / c1\n    return containerWidth * remainingTime / this.containerWidth\n  }\n\n  // 移动弹幕，move 方法不应该暴露给外部，所有放在 runtime 里面\n  move (barrage, manager) {\n    // 设置当前弹幕在哪一个弹道\n    const node = barrage.node\n    const prevBarrage = lastElement(barrage.trajectory.values, 2)\n\n    node.style.top = `${barrage.position.y}px`\n\n    return new Promise(resolve => {\n      nextFrame(() => {\n        const width = barrage.getWidth()\n        const isNegative = barrage.direction === 'left' ? 1 : -1\n        const containerWidth = this.containerWidth + width\n\n        // 计算追尾的情况\n        // 如果 rowGap <= 0，那么就是没有做限制，不需要计算追尾的情况\n        // 如果上一个弹幕没有移动，那么肯定是不能出现的\n        // 如果上一个弹幕处于暂停状态，不需要 计算追尾\n        if (\n            prevBarrage &&\n            this.rowGap > 0 &&\n            prevBarrage.moveing &&\n            !prevBarrage.paused\n        ) {\n          const fixTime = this.computingDuration(prevBarrage, barrage)\n\n          // 如果需要修正时间\n          if (fixTime !== null) {\n            if (isRange(this.opts.times, fixTime)) {\n              barrage.duration = fixTime\n              barrage.timeInfo.currentDuration = fixTime\n            } else {\n              // 如果不在范围内，就恢复初始状态，并等待下次 render\n              barrage.reset()\n              node.style.top = null\n              manager.stashBarrages.unshift(barrage)\n              return\n            }\n          }\n        }\n\n        node.style.opacity = 1\n        node.style.pointerEvents = manager.isShow ? 'auto' : 'none'\n        node.style.visibility = manager.isShow ? 'visible' : 'hidden'\n        node.style.transform = `translateX(${isNegative * (containerWidth)}px)`\n        node.style[transitionProp] = `transform linear ${barrage.duration}s`\n        node.style[`margin${upperCase(barrage.direction)}`] = `-${width}px`\n\n        barrage.moveing = true\n        barrage.timeInfo.startTime = Date.now()\n        \n        callHook(barrage.hooks, 'barrageMove', [node, barrage])\n        resolve(whenTransitionEnds(node))\n      })\n    })\n  }\n\n  // 移动特殊弹幕\n  moveSpecialBarrage (barrage, manager) {\n    const { node, opts } = barrage\n\n    // 先定义样式，后面的计算才会准确\n    node.style.position = 'absolute'\n    node.style.display = 'inline-block'\n    node.style.pointerEvents = manager.isShow ? 'auto' : 'none'\n    node.style.visibility = manager.isShow ? 'visible' : 'hidden'\n\n    return new Promise(resolve => {\n      const { x = 0, y = 0 } = opts.position(barrage)\n      const xStyle = `translateX(${x})`\n      const yStyle = `translateY(${y})`\n\n      node.style.transform = xStyle + yStyle\n\n      // 是否移动\n      nextFrame(() => {\n        if (opts.direction === 'none') {\n          // 稍微移动一点点，以便触发动画回调\n          node.style.transform = xStyle + yStyle + `translateX(${Number.MIN_VALUE}px)`\n        } else {\n          const isNegative = opts.direction === 'left' ? 1 : -1\n          node.style.transform = `translateX(${isNegative * (this.containerWidth)}px) ${yStyle}`\n        }\n\n        barrage.moveing = true\n        node.style[transitionProp] = `transform linear ${opts.duration}s`\n\n        callHook(barrage.hooks, 'move', [node, barrage])\n        callHook(manager.opts.hooks, 'barrageMove', [node, barrage])\n        resolve(whenTransitionEnds(node))\n      })\n    })\n  }\n}","import { warning, callHook, createKey } from './utils'\n\nexport class SpecialBarrage {\n  constructor (opts) {\n    this.opts = opts\n    this.node = null\n    this.moveing = false\n    this.isSpecial = true\n    this.renderTimer = null\n    this.hooks = opts.hooks\n    this.data = opts.data || null\n    this.key = opts.key || createKey()\n\n    this.timeInfo = {\n      pauseTime: 0, // 总共暂停了多少时间\n      startTime: null, // 开始移动的时间\n      prevPauseTime: null, // 上次暂停的时间\n      currentDuration: opts.duration, // 当前实时运动时间，因为每次暂停会重置 transition duration\n    }\n  }\n\n  getHeight () {\n    return (this.node && this.node.clientHeight) || 0\n  }\n\n  getWidth () {\n    return (this.node && this.node.clientWidth) || 0\n  }\n\n  create (manager) {\n    this.node = document.createElement('div')\n    callHook(this.hooks, 'create', [this.node, this])\n    callHook(manager.opts.hooks, 'barrageCreate', [this.node, this])\n  }\n\n  getMovePrecent () {\n    const { pauseTime, startTime, prevPauseTime } = this.timeInfo\n    const currentTime = this.paused ? prevPauseTime : Date.now()\n\n    return (currentTime - startTime - pauseTime) / 1000 / this.duration\n  }\n\n  append (manager) {\n    warning(manager.container, 'Need container element.')\n    if (this.node) {\n      manager.container.appendChild(this.node)\n      callHook(this.hooks, 'append', [this.node, this])\n      callHook(manager.opts.hooks, 'barrageAppend', [this.node, this])\n    }\n  }\n  \n  remove (manager) {\n    warning(manager.container, 'Need container element.')\n    if (this.node) {\n      manager.container.removeChild(this.node)\n      callHook(this.hooks, 'remove', [this.node, this])\n      callHook(manager.opts.hooks, 'barrageRemove', [this.node, this])\n    }\n  }\n\n  destroy (manager) {\n    this.remove(manager)\n    this.moveing = false\n\n    const index = manager.specialBarrages.indexOf(this)\n    if (~index) {\n      manager.specialBarrages.splice(index, 1)\n    }\n\n    callHook(this.hooks, 'destroy', [this.node, this])\n    callHook(manager.opts.hooks, 'barrageDestroy', [this.node, this])\n    this.node = null\n  }\n}\n\nexport default function createSpecialBarrage (opts = {}) {\n  opts = Object.assign({\n    hooks: {},\n    duration: 0, // 默认不显示\n    direction: 'none', // left or right or none\n    position: () => ({ x: 0, y: 0 }), // 默认起始位置,\n  }, opts)\n\n  return new SpecialBarrage(opts)\n}","import Barrage from './barrage'\nimport { callHook } from './utils'\nimport RuntimeManager from './runtime'\nimport createSpecialBarrage from './special'\n\nexport default class BarrageManager {\n  constructor (opts) {\n    this.opts = opts\n    this.loopTimer = null\n    this.showBarrages = [] // 渲染在页面上的弹幕数量\n    this.stashBarrages = []// 暂存的弹幕数量\n    this.specialBarrages = [] // 特殊弹幕，特殊弹幕立即发立即渲染，移动完毕结束\n    this.isShow = opts.isShow\n    this.container = opts.container\n    this.RuntimeManager = new RuntimeManager(opts)\n  }\n\n  get stashLength () {\n    return this.stashBarrages.length\n  }\n\n  get specialLength () {\n    return this.specialBarrages.length\n  }\n\n  get showLength () {\n    return this.showBarrages.length + this.specialBarrages.length\n  }\n\n  get length () {\n    return this.showBarrages.length + this.specialBarrages.length + this.stashBarrages.length\n  }\n\n  get containerWidth () {\n    return this.RuntimeManager.containerWidth\n  }\n\n  get containerHeight () {\n    return this.RuntimeManager.containerHeight\n  }\n\n  get runing () {\n    return this.loopTimer !== null\n  }\n\n  // API 发送普通弹幕\n  send (data) {\n    if (!Array.isArray(data)) data = [data]\n    if (this.assertCapacity(data.length)) return false\n\n    this.stashBarrages.push.apply(this.stashBarrages, data)\n    callHook(this.opts.hooks, 'send', [this, data])\n    return true\n  }\n\n  // API 发送特殊弹幕\n  sendSpecial (data) {\n    if (!this.runing) return false\n    if (!Array.isArray(data)) data = [data]\n    if (this.assertCapacity(data.length)) return false\n\n    for (let i = 0; i < data.length; i++) {\n      const barrage =  createSpecialBarrage(data[i])\n      // 如果当前这个特殊弹幕时间小于等于 0，就不需要渲染\n      if (barrage.opts.duration <= 0) continue\n\n      barrage.create(this)\n      barrage.append(this)\n      this.specialBarrages.push(barrage)\n\n      // 结束后销毁\n      this.RuntimeManager.moveSpecialBarrage(barrage, this).then(() => {\n        barrage.destroy(this)\n        if (this.length === 0) {\n          callHook(this.opts.hooks, 'ended', [this])\n        }\n      })\n    }\n\n    callHook(this.opts.hooks, 'sendSpecial', [this, data])\n    return true\n  }\n\n  // API 显示所有弹幕\n  show () {\n    if (!this.isShow) {\n      this.isShow = true\n      this.each(barrage => {\n        if (barrage.node) {\n          barrage.node.style.visibility = 'visible'\n          barrage.node.style.pointerEvents = 'auto'\n        }\n      })\n      callHook(this.opts.hooks, 'show', [this])\n    }\n    return this\n  }\n\n  // API 隐藏所有弹幕\n  hidden () {\n    if (this.isShow) {\n      this.isShow = false\n      this.each(barrage => {\n        if (barrage.node) {\n          barrage.node.style.visibility = 'hidden'\n          barrage.node.style.pointerEvents = 'none'\n        }\n      })\n      callHook(this.opts.hooks, 'hidden', [this])\n    }\n    return this    \n  }\n\n  // API 遍历在渲染中的节点\n  each (cb) {\n    if (typeof cb === 'function') {\n      let i = 0\n      for (; i < this.specialBarrages.length; i++) {\n        cb(this.specialBarrages[i], i)\n      }\n\n      for (i = 0; i < this.showBarrages.length; i++) {\n        const barrage = this.showBarrages[i]\n        if (barrage.moveing) {\n          cb(barrage, i)\n        }\n      }\n    }\n    return this\n  }\n\n  // API 停止轮询添加弹幕\n  stop (noCallHook) {\n    if (this.loopTimer) {\n      clearTimeout(this.loopTimer)\n      this.loopTimer = null\n\n      if (!noCallHook) {\n        callHook(this.opts.hooks, 'stop', [this])\n      }\n    }\n    return this\n  }\n\n  // API 循环检测添加弹幕\n  start (noCallHook) {\n    const core = () => {\n      this.loopTimer = setTimeout(() => {\n        this.renderBarrage()\n        core()\n      }, this.opts.interval)\n    }\n\n    this.stop(true)\n    core()\n\n    if (!noCallHook) {\n      callHook(this.opts.hooks, 'start', [this])\n    }\n  \n    return this\n  }\n\n  // API 重新设置参数\n  setOptions (opts) {\n    if (opts) {\n      // 清除定时器，重新根据新的时间开始\n      if ('interval' in opts) {\n        this.stop(true)\n        this.start(true)\n      }\n      // 如果有高度，要重新计算轨道\n      if ('height' in opts) {\n        this.RuntimeManager.singleHeight = opts.height\n        this.RuntimeManager.resize()\n      }\n      // 设置 rowGap\n      if ('rowGap' in opts) {\n        this.RuntimeManager.rowGap = opts.rowGap\n      }\n\n      this.opts = Object.assign(this.opts, opts)\n      callHook(this.opts.hooks, 'setOptions', [this, opts])\n    }\n    return this\n  }\n\n  // API 重新计算轨道\n  resize () {\n    this.RuntimeManager.resize()\n    callHook(this.opts.hooks, 'resize', [this])\n    return this\n  }\n\n  // API 清空缓存，立即终止\n  clear () {\n    this.stop()\n\n    this.each(barrage => {\n      barrage.isSpecial\n        ? barrage.remove(this)\n        : barrage.remove()\n    })\n\n    this.showBarrages = []\n    this.stashBarrages = []\n    this.specialBarrages = []\n    this.RuntimeManager.container = []\n    this.RuntimeManager.resize()\n\n    callHook(this.opts.hooks, 'clear', [this])\n  }\n\n  // 判断是否超过容量\n  assertCapacity (n) {\n    const res = n + this.length > this.opts.capacity\n    if (res) {\n      console.warn(`The number of barrage is greater than \"${this.opts.capacity}\".`)\n    }\n    return res\n  }\n\n  // 初始化弹幕\n  renderBarrage () {\n    if (this.stashBarrages.length > 0) {\n      const { rows, rowGap } = this.RuntimeManager\n      let length = this.opts.limit - this.showLength\n\n      // 一次弹出的弹幕最多只能把所有的轨道塞满\n      // 如果大于轨道树就需要优化，避免不必要的计（实测，内存占用好像区别不大...）\n      // 但是如果我们发现 rowGap <= 0，就是没有限制，那么弹幕会实时出现\n      // 所有的轨道都会不停出现弹幕，就要去掉这个优化\n      // 但此时如果不小心就会导致内存飙升，这个种场景适合弹幕立即发送，立即出现的场景\n      if (rowGap > 0 && length > rows) {\n        length = this.RuntimeManager.rows\n      }\n\n      if (length > this.stashBarrages.length) {\n        length = this.stashBarrages.length\n      }\n\n      if (length > 0 && this.runing) {\n        for (let i = 0; i < length; i++) {\n          const data = this.stashBarrages.shift()\n          if (data) {\n            this.initSingleBarrage(data)\n          }\n        }\n\n        callHook(this.opts.hooks, 'render', [this])\n      }\n    }\n  }\n\n  // 初始化一个弹幕\n  initSingleBarrage (data) {\n    const barrage = data instanceof Barrage ? data : this.createSingleBarrage(data)\n    const newBarrage = barrage && this.sureBarrageInfo(barrage)\n\n    if (newBarrage) {\n      // 当前这个弹幕需要渲染到屏幕上\n      newBarrage.append()\n      this.showBarrages.push(newBarrage)\n      newBarrage.trajectory.values.push(newBarrage)\n\n      // 弹幕运动结束后删掉\n      this.RuntimeManager.move(newBarrage, this).then(() => {\n        newBarrage.destroy()\n        if (this.length === 0) {\n          callHook(this.opts.hooks, 'ended', [this])\n        }\n      })\n    } else {\n      // 否则就先存起来，按道理说只会存一个\n      // 按照现有的逻辑，最后一个会不停的取出来，然后存起来\n      this.stashBarrages.unshift(barrage)\n    }\n  }\n\n  createSingleBarrage (data) {\n    const [max, min] = this.opts.times\n    const time = Number(\n      max === min\n        ? max\n        : (Math.random() * (max - min) + min).toFixed(0)\n    )\n\n    // 时间小于等于 0，将不会渲染\n    if (time <= 0) return null\n    \n    return new Barrage(\n      data,\n      time,\n      this,\n      Object.assign({}, this.opts.hooks, {\n        barrageCreate: this.setBarrageStyle.bind(this),\n      })\n    )\n  }\n\n  // 初始化弹幕的位置信息\n  sureBarrageInfo (barrage) {\n    const trajectory = this.RuntimeManager.getTrajectory()\n\n    // 没有弹道信息代表现在页面上不能出现\n    if (!trajectory) return null\n\n    barrage.trajectory = trajectory\n    barrage.position.y = trajectory.gaps[0]\n\n    return barrage\n  }\n\n  // 设置弹幕的样式\n  setBarrageStyle (node, barrage) {\n    const { hooks = {}, direction } = this.opts\n\n    callHook(hooks, 'barrageCreate', [node, barrage])\n\n    node.style.opacity = 0\n    node.style[direction] = 0\n    node.style.position = 'absolute'\n    node.style.display = 'inline-block'\n    node.style.pointerEvents = this.isShow ? 'auto' : 'none'\n    node.style.visibility = this.isShow ? 'visible' : 'hidden'\n  }\n}","import BarrageManager from './manager'\n\nfunction createBarrageManager (opts = {}) {\n  opts = Object.assign({\n    hooks: {}, // 钩子函数\n    limit: 50, // 页面上允许渲染的数量\n    height: 50, // 弹道的高\n    rowGap: 50, // 同一条轨道上两条弹幕的间隔\n    isShow: true, // 默认 show\n    capacity: 1024, // 内存中能存放的弹幕数量\n    times: [8, 15], // 弹幕移动时间取值范围\n    interval: 2000, // 轮询间隔时间\n    direction: 'right', // 弹幕左边出来还是右边\n  }, opts)\n\n  return new BarrageManager(opts)\n}\n\nexport default {\n  create: createBarrageManager,\n}"],"names":[],"mappings":"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"}